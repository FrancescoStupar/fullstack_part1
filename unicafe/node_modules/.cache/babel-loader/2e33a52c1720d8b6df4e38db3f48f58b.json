{"ast":null,"code":"var _jsxFileName = \"/Users/franz/Desktop/fullstack/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StatisticLine = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.text, \" \", props.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_c = StatisticLine;\n\nconst Statistics = props => {\n  if (props.counter === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"no data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: props.average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"positive\",\n      value: props.positive + ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Button;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [counter, setCounter] = useState(0);\n\n  const goodFeedback = () => {\n    setGood(good + 1);\n    setAverage(average + 1);\n    setCounter(counter + 1);\n  };\n\n  const neutralFeedback = () => {\n    setNeutral(neutral + 1);\n    setCounter(counter + 1);\n  };\n\n  const badFeedback = () => {\n    setBad(bad + 1);\n    setAverage(average - 1);\n    setCounter(counter + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: goodFeedback,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: neutralFeedback,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: badFeedback,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      counter: counter,\n      neutral: neutral,\n      bad: bad,\n      average: average / counter,\n      positive: good / counter * 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"PHU6tgHUdj92j+n5nFmjs1T4J/A=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/franz/Desktop/fullstack/part1/unicafe/src/App.js"],"names":["React","useState","StatisticLine","props","text","value","Statistics","counter","good","neutral","bad","average","positive","Button","onClick","App","setGood","setNeutral","setBad","setAverage","setCounter","goodFeedback","neutralFeedback","badFeedback"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst StatisticLine = (props) => {\n  return (\n    <>\n    <p>{props.text} {props.value}</p>\n    </>\n  )\n}\n\nconst Statistics = (props) =>\n{\n  if (props.counter === 0){\n    return(\n      <h3>no data</h3>\n    )\n  }\n  return(\n    <div>\n      <StatisticLine text=\"good\" value ={props.good} />\n      <StatisticLine text=\"neutral\" value ={props.neutral} />\n      <StatisticLine text=\"bad\" value ={props.bad} />\n      <StatisticLine text=\"average\" value ={props.average} />\n      <StatisticLine text=\"positive\" value ={props.positive + ''}/>\n    </div>\n  )\n}\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.onClick}>\n      {props.text}\n    </button>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [counter, setCounter] = useState(0)\n\n  const goodFeedback = () => {\n    setGood(good + 1)\n    setAverage(average + 1)\n    setCounter(counter + 1)\n  }\n\n  const neutralFeedback = () => {\n    setNeutral(neutral + 1)\n    setCounter(counter + 1)\n  }\n\n  const badFeedback = () => {\n    setBad(bad + 1)\n    setAverage(average - 1)\n    setCounter(counter + 1)\n  }\n \n  return (\n    <>\n    <h1>give feedback</h1>\n    <Button onClick={goodFeedback} text = \"good\"/>\n    <Button onClick={neutralFeedback} text = \"neutral\"/>\n    <Button onClick={badFeedback} text = \"bad\"/>\n    <h1>statistics</h1>\n    <Statistics good={good} counter={counter} neutral={neutral} bad={bad} average={average/counter} positive={good/counter * 100}/>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}