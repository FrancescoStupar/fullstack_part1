{"ast":null,"code":"var _jsxFileName = \"/Users/franz/Desktop/fullstack/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  if (counter === 0) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), \"good \", props.good, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }, this), \"neutral \", props.neutral, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 28\n    }, this), \"bad \", props.bad, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }, this), \"average \", props.average, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 29\n    }, this), \"positive \", props.positive, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [counter, setCounter] = useState(0);\n\n  const goodFeedback = () => {\n    setGood(good + 1);\n    setAverage(average + 1);\n    setCounter(counter + 1);\n  };\n\n  const neutralFeedback = () => {\n    setNeutral(neutral + 1);\n    setCounter(counter + 1);\n  };\n\n  const badFeedback = () => {\n    setBad(bad + 1);\n    setAverage(average - 1);\n    setCounter(counter + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goodFeedback,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: neutralFeedback,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: badFeedback,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      average: average / counter,\n      positive: good / counter * 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"PHU6tgHUdj92j+n5nFmjs1T4J/A=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/franz/Desktop/fullstack/part1/unicafe/src/App.js"],"names":["React","useState","Statistics","props","counter","good","neutral","bad","average","positive","App","setGood","setNeutral","setBad","setAverage","setCounter","goodFeedback","neutralFeedback","badFeedback"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IACnB;AACE,MAAIC,OAAO,KAAK,CAAhB,EACA,oBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,WAEMD,KAAK,CAACE,IAFZ,oBAEkB;AAAA;AAAA;AAAA;AAAA,YAFlB,cAGSF,KAAK,CAACG,OAHf,eAGuB;AAAA;AAAA;AAAA;AAAA,YAHvB,UAIKH,KAAK,CAACI,GAJX,oBAIgB;AAAA;AAAA;AAAA;AAAA,YAJhB,cAKSJ,KAAK,CAACK,OALf,oBAKwB;AAAA;AAAA;AAAA;AAAA,YALxB,eAMUL,KAAK,CAACM,QANhB,oBAM0B;AAAA;AAAA;AAAA;AAAA,YAN1B;AAAA,kBADF;AAUD,CAbD;;KAAMP,U;;AAeN,MAAMQ,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACL,IAAD,EAAOM,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUM,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACM,GAAD,EAAMM,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACO,OAAD,EAAUM,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACG,OAAD,EAAUW,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;;AAEA,QAAMe,YAAY,GAAG,MAAM;AACzBL,IAAAA,OAAO,CAACN,IAAI,GAAG,CAAR,CAAP;AACAS,IAAAA,UAAU,CAACN,OAAO,GAAG,CAAX,CAAV;AACAO,IAAAA,UAAU,CAACX,OAAO,GAAG,CAAX,CAAV;AACD,GAJD;;AAMA,QAAMa,eAAe,GAAG,MAAM;AAC5BL,IAAAA,UAAU,CAACN,OAAO,GAAG,CAAX,CAAV;AACAS,IAAAA,UAAU,CAACX,OAAO,GAAG,CAAX,CAAV;AACD,GAHD;;AAKA,QAAMc,WAAW,GAAG,MAAM;AACxBL,IAAAA,MAAM,CAACN,GAAG,GAAG,CAAP,CAAN;AACAO,IAAAA,UAAU,CAACN,OAAO,GAAG,CAAX,CAAV;AACAO,IAAAA,UAAU,CAACX,OAAO,GAAG,CAAX,CAAV;AACD,GAJD;;AAMA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAEY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA;AAAQ,MAAA,OAAO,EAAEC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAQA;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA,eAWA,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEb,IAAlB;AAAwB,MAAA,OAAO,EAAEC,OAAjC;AAA0C,MAAA,GAAG,EAAEC,GAA/C;AAAoD,MAAA,OAAO,EAAEC,OAAO,GAACJ,OAArE;AAA8E,MAAA,QAAQ,EAAEC,IAAI,GAACD,OAAL,GAAe;AAAvG;AAAA;AAAA;AAAA;AAAA,YAXA;AAAA,kBADF;AAeD,CAvCD;;GAAMM,G;;MAAAA,G;AAyCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Statistics = (props) =>\n{\n  if (counter === 0)\n  return(\n    <>\n    <h1>statistics</h1>\n    good {props.good} <br></br>\n    neutral {props.neutral}<br></br>\n    bad {props.bad} <br></br>\n    average {props.average} <br></br>\n    positive {props.positive}%<br></br>\n    </>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [counter, setCounter] = useState(0)\n\n  const goodFeedback = () => {\n    setGood(good + 1)\n    setAverage(average + 1)\n    setCounter(counter + 1)\n  }\n\n  const neutralFeedback = () => {\n    setNeutral(neutral + 1)\n    setCounter(counter + 1)\n  }\n\n  const badFeedback = () => {\n    setBad(bad + 1)\n    setAverage(average - 1)\n    setCounter(counter + 1)\n  }\n\n  return (\n    <>\n    <h1>give feedback</h1>\n    <button onClick={goodFeedback}>\n        good\n    </button>\n    <button onClick={neutralFeedback}>\n        neutral\n    </button>\n    <button onClick={badFeedback}>\n        bad\n    </button>\n    <Statistics good={good} neutral={neutral} bad={bad} average={average/counter} positive={good/counter * 100}/>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}